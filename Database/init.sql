-- ================================================
-- CREATE DATABASE 
-- ================================================
CREATE DATABASE onheels_db;
-- ================================================
-- TABLE: ROLES
-- ================================================
CREATE TABLE roles (
    id_role        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_name      VARCHAR(50) NOT NULL UNIQUE
);
-- ================================================
-- TABLE: USERS
-- ================================================
CREATE TABLE users (
    id_user        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name           VARCHAR(100) NOT NULL,
    email          VARCHAR(100) NOT NULL UNIQUE,
    password       VARCHAR(255) NOT NULL,
    id_role        INT NOT NULL,
    CONSTRAINT fk_users_roles
        FOREIGN KEY (id_role)
        REFERENCES roles(id_role)
        ON UPDATE CASCADE
        ON DELETE RESTRICT
);
-- ================================================
-- TABLE: STORES
-- Un vendedor (usuario con rol "seller") puede tener varias tiendas
-- ================================================
CREATE TABLE stores (
    id_store           INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    store_name         VARCHAR(100) NOT NULL,
    store_description  TEXT NULL,
    address            VARCHAR(255) NOT NULL,
    city               VARCHAR(100) NOT NULL,
    country            VARCHAR(100) NOT NULL,
    id_seller          INT NOT NULL,
    CONSTRAINT fk_stores_seller
        FOREIGN KEY (id_seller)
        REFERENCES users(id_user)
        ON UPDATE CASCADE
        ON DELETE RESTRICT
);
-- ================================================
-- TABLE: PRODUCTS
-- Cada producto pertenece a una tienda
-- ================================================
CREATE TABLE products (
    id_product          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_name        VARCHAR(100) NOT NULL,
    product_description TEXT NULL,
    price               NUMERIC(10,2) NOT NULL,
    stock               INT NOT NULL,
    id_store            INT NOT NULL,
    CONSTRAINT fk_products_store
        FOREIGN KEY (id_store)
        REFERENCES stores(id_store)
        ON UPDATE CASCADE
        ON DELETE RESTRICT
);
-- ================================================
-- TABLE: ORDERS
-- Cada orden pertenece a un usuario (cliente)
-- ================================================
CREATE TABLE orders (
    id_order    INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_user     INT NOT NULL,
    order_date  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    total       NUMERIC(10,2) NOT NULL,
    CONSTRAINT fk_orders_user
        FOREIGN KEY (id_user)
        REFERENCES users(id_user)
        ON UPDATE CASCADE
        ON DELETE RESTRICT
);
-- ================================================
-- TABLE: ORDER_DETAIL
-- Relación muchos-a-muchos entre orders y products
-- ================================================
CREATE TABLE order_detail (
    id_order_detail INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_order        INT NOT NULL,
    id_product      INT NOT NULL,
    quantity        INT NOT NULL,
    unit_price      NUMERIC(10,2) NOT NULL,
    CONSTRAINT fk_orderdetail_order
        FOREIGN KEY (id_order)
        REFERENCES orders(id_order)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    CONSTRAINT fk_orderdetail_product
        FOREIGN KEY (id_product)
        REFERENCES products(id_product)
        ON UPDATE CASCADE
        ON DELETE RESTRICT
);
-- ================================================
-- TABLE: FAVORITES
-- Relación muchos-a-muchos entre users y products
-- ================================================
CREATE TABLE favorites (
    id_favorite INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_user     INT NOT NULL,
    id_product  INT NOT NULL,
    CONSTRAINT fk_favorites_user
        FOREIGN KEY (id_user)
        REFERENCES users(id_user)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    CONSTRAINT fk_favorites_product
        FOREIGN KEY (id_product)
        REFERENCES products(id_product)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    CONSTRAINT uq_favorites UNIQUE (id_user, id_product)
);
